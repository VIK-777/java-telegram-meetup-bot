# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle, containerize application and push to GCP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: 8.7
        arguments: clean build
    - name: Google auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        project_id: '${{ secrets.GCP_PROJECT_ID }}'
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: Containerize application and push to GCP
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: 8.7
        arguments: 'jib --image="vik/meetup-calendar-telegram-bot" -Djib.from.image=azul/zulu-openjdk:21-latest -Djib.to.image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/meetup-calendar-telegram-bot'
